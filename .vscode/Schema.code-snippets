{
	// Place your argazi workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

		"Generate schema": {
		"scope": "javascript,typescript",
		"prefix": "sg",
		"body": [
			"// #region $1",
			"export const _$1Schema = $1Schema.pipe(Schema.identifier(\"$1Schema\"));",
			"",			
			"export type $1Context = Schema.Schema.Context<typeof _$1Schema>;",
			"export interface $1Encoded extends Schema.Schema.Encoded<typeof _$1Schema> {};",
			"export interface $1 extends Schema.Schema.Type<typeof _$1Schema> {};",
			"",
			"export const $1Schema: Schema.Schema<$1, $1Encoded, $1Context> = _$1Schema;",
			"// #endregion $1Schema",
		],
		"description": "Generate schema"
	}
}